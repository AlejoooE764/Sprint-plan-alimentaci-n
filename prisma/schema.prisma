// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AlimentacionPlan {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  fechaInicio DateTime
  fechaFin    DateTime
  creadoEn    DateTime @default(now())
  actualizadoEn DateTime @updatedAt
  usuarioId   Int? // Optional: Set to Int if a plan must have a user
  usuario     Usuario? @relation(fields: [usuarioId], references: [id]) // Optional: Set to Usuario if a plan must have a user
  comidas     Comida[]
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  // Add other user-specific fields here, e.g., password, role, etc.
  // For now, keeping it simple.
  planes    AlimentacionPlan[]
  creadoEn  DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}

model Comida {
  id            Int      @id @default(autoincrement())
  tipo          String   // desayuno, almuerzo, cena, snack
  hora          String?
  descripcion   String
  planId        Int
  plan          AlimentacionPlan @relation(fields: [planId], references: [id])
}
